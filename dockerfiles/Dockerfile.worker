# Dockerfile for Worker Service (Background Jobs)
FROM node:22-alpine AS builder
RUN apk add --no-cache libc6-compat
WORKDIR /app

# Install pnpm
RUN corepack enable && corepack prepare pnpm@9.14.0 --activate

# Copy all package.json files for better caching
# Worker needs: database, api, ai (copy web/ui for dependency resolution, but won't build them)
COPY package.json pnpm-workspace.yaml pnpm-lock.yaml ./
COPY worker/package.json ./worker/
COPY packages/ai/package.json ./packages/ai/
COPY packages/api/package.json ./packages/api/
COPY packages/database/package.json ./packages/database/
# Copy other packages' package.json files for pnpm workspace dependency resolution
COPY web/package.json ./web/
COPY packages/ui/package.json ./packages/ui/

# Install all dependencies
RUN pnpm install --frozen-lockfile

# Copy all source files
COPY . .

# Build only packages needed by worker service
# Worker needs: database, api, ai (not ui)

WORKDIR /app/packages/ai
RUN pnpm install --frozen-lockfile && \
    chmod +x build.sh && \
    pnpm build

WORKDIR /app/packages/database
RUN pnpm build

WORKDIR /app/packages/api
RUN pnpm build

# Build worker service
WORKDIR /app/worker
RUN echo "Building worker service..." && \
    pnpm build && \
    echo "Worker build completed"

# Production stage
FROM node:22-alpine AS runner
WORKDIR /app

ENV NODE_ENV=production

# Install pnpm
RUN corepack enable && corepack prepare pnpm@9.14.0 --activate

RUN addgroup --system --gid 1001 nodejs && \
    adduser --system --uid 1001 worker

# Copy package files and lockfile
COPY --from=builder /app/package.json ./package.json
COPY --from=builder /app/pnpm-workspace.yaml ./pnpm-workspace.yaml
COPY --from=builder /app/pnpm-lock.yaml ./pnpm-lock.yaml

# Copy package.json files only for packages needed by worker
# Worker needs: database, api, ai (not ui)
COPY --from=builder /app/worker/package.json ./worker/package.json
COPY --from=builder /app/packages/ai/package.json ./packages/ai/package.json
COPY --from=builder /app/packages/database/package.json ./packages/database/package.json
COPY --from=builder /app/packages/api/package.json ./packages/api/package.json

# Copy built dist folders (only needed packages)
COPY --from=builder /app/worker/dist ./worker/dist
COPY --from=builder /app/packages/ai/dist ./packages/ai/dist
COPY --from=builder /app/packages/database/dist ./packages/database/dist
COPY --from=builder /app/packages/api/dist ./packages/api/dist

# Copy required source files for database
COPY --from=builder /app/packages/database/schema.ts ./packages/database/schema.ts
COPY --from=builder /app/packages/database/index.ts ./packages/database/index.ts

# Copy required source files for API
COPY --from=builder /app/packages/api/lib ./packages/api/lib
COPY --from=builder /app/packages/api/trpc ./packages/api/trpc

# Install production dependencies
RUN pnpm install --prod --frozen-lockfile --ignore-scripts

USER worker
EXPOSE 3000 3001
WORKDIR /app/worker
CMD ["node", "dist/index.js"]

